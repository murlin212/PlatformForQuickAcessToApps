<Window x:Class="GameLauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GameLauncher"
        mc:Ignorable="d"
        FontFamily="Franklin Gothic Medium"
        WindowStyle="None"
        Name="HomeScreen"
        Background="#1f1f1f"
        ResizeMode="CanResize"  
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        SizeToContent="Manual"
        Title="NewaveLauncher" MouseDown="HomeScreen_MouseDown"
        Icon="Assets\NWL Logo.png"
        Height="{Binding CustomHeight, Mode=TwoWay}" 
        Width="{Binding CustomWidth, Mode=TwoWay}"
        d:DesignHeight="1080"
        d:DesignWidth="1920"
        >


    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <LinearGradientBrush x:Key="Clicked" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#363636" Offset="0.0"/>
                    <GradientStop Color="#393939" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>


        <Style x:Key="{x:Type Menu}" TargetType="Menu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="#FF747474"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Menu">
                        <Border x:Name="MainMenu" Background="#3555">
                            <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                BorderBrush="Transparent" 
                CornerRadius="3" 
                BorderThickness="1" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>


                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                      Content="{TemplateBinding Header}" 
                                      Grid.Column="1" 
                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                      ContentSource="Header" 
                                      Margin="{TemplateBinding Padding}" 
                                      RecognizesAccessKey="True" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                    <Popup x:Name="PART_Popup"  AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#595959" BorderThickness="1" Background="#3A3A3A" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>

                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#2C2C2C"/>
                    <Setter Property="BorderThickness" TargetName="templateRoot" Value="1"></Setter>
                </Trigger>

                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource Clicked}" />
                    <Setter Property="Header" Value="Test" />
                    <Setter Property="BorderBrush" Value="#2C2C2C"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="MenuItemControlTemplate2" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF232323"/>
                    <Setter Property="Background" TargetName="templateRoot" Value="#FF232323"/>
                    <Setter Property="TextBlock.Foreground" TargetName="menuHeaderContainer" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="LibrarySearchBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="FontWeight" Value="400"/>
            <Setter Property="BorderBrush" Value="#2a2a2a"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="40"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="FontFamily" Value="Franklin Gothic Medium" />
            <Setter Property="Padding" Value="6 3" />
            <Setter Property="CaretBrush" Value="White" />
            <Setter Property="Foreground" Value="#FF5A5A5A" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="searchBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="13"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="Part_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Margin="-2 2"/>

                                <Label x:Name="SearchBoxLabel"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Visibility="Collapsed"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="{TemplateBinding Padding}"
                                       FontSize="15">
                                    
                                </Label>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                        TargetName="SearchBoxLabel"
                                        Value="Visible">
                                </Setter>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="Gray"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="Gray"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground"
                                        Value="#FFCECECE"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground"
                                        Value="#FFCECECE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>
        
    </Window.Resources>

    
    
    
    <Grid>

        <MediaElement 
            Source="Assets/BackgroundFinalProduct2ANIMATION1920x1080.gif"
            Stretch="Fill"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            UnloadedBehavior="Manual"
            Visibility="Visible"                  
            Margin="230,0,0,0"  
            SpeedRatio="1"
            IsMuted="False"
            Name="HomeGif"
            MediaEnded="HomeGif_MediaEnded">
        </MediaElement>

        <Button
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Margin="0,10,35,0" Height="30" Width="30" RenderTransformOrigin="4.29,0.45"
            BorderThickness="0"
            Click="Button_Click"
            Cursor="Hand">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF7A6666"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Viewbox>
                <Image Source="{StaticResource close}" RenderTransformOrigin="0.175,0.774"></Image>
            </Viewbox>
            <!-- Style="{StaticResource WindowButtonsStyle}"-->
        </Button>

        <Button
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Margin="0,10,97,0" Height="30" Width="30" RenderTransformOrigin="4.29,0.45"
            BorderThickness="0"
            Click="ResButton_Click"
            Cursor="Hand">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF7A6666"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Viewbox>
                <Image Source="{StaticResource restore}" RenderTransformOrigin="0.175,0.774"></Image>
            </Viewbox>
            <!-- Style="{StaticResource WindowButtonsStyle}"-->
        </Button>

        <Button
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Margin="0,10,160,0" Height="30" Width="30" RenderTransformOrigin="4.29,0.45"
            BorderThickness="0"
            Click="MinimizeButton_Click"
            Cursor="Hand">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF7A6666"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Viewbox>
                <Image Source="{StaticResource minimize}" RenderTransformOrigin="0.175,0.774"></Image>
            </Viewbox>
            <!-- Style="{StaticResource WindowButtonsStyle}"-->
        </Button>

        <Viewbox StretchDirection="DownOnly" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="70,0,0,40">
            <TextBlock Foreground="White" FontSize="40" TextAlignment="Center" TextWrapping="Wrap" >
                <TextBlock.RenderTransform>
                    <ScaleTransform ScaleX="1.3" ScaleY="1.2" />
                </TextBlock.RenderTransform>

            Welcome to your own custom  <LineBreak/>
            game launcher where you can <LineBreak/>
            easily add and play whatever <LineBreak/>
            game you add on! <LineBreak/>
            _____________________

            </TextBlock>
        </Viewbox>
        <Button
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Margin="0,0,20,15" Height="48" Width="200" RenderTransformOrigin="4.29,0.45"
            BorderThickness="0"
            Click="HomeButton_Click"
            Content="To Website"
            FontSize="30"
            Cursor="Hand"
            Opacity="0.4"
            x:Name="HomeButton">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Button.Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Transparent" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Button.Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="White" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Opacity)"
                                            From="0.4" To="1" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Opacity)"
                                            From="1" To="0.4" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

        </Button>

        <Grid
            x:Name="dropdown"
            MaxWidth="5000"
            Height="1007"
            Background="#131313"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch" 
            Margin="230,74,0,0"
            Visibility="Visible">

            <ScrollViewer x:Name="scroll" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">

                <Grid x:Name="CardGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100"/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                </Grid>
            </ScrollViewer>


            <StackPanel x:Name="dropdownInnerContent">
                <Button
                    FontSize="30"
                    Name="addGameButton"
                    Width="200"
                    Height="55"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Cursor="Hand"
                    Margin="0,15,45,0"
                    Click="AddButton_Click" Grid.Row="0"
                    BorderThickness="0"
                    Opacity="0.5">

                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>

                                <EventTrigger RoutedEvent="Button.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Opacity)"
                                            From="0.5" To="1" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="Button.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetProperty="(Button.Opacity)"
                                            From="1" To="0.5" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>

                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Image Source="Assets/AddGame.png" Stretch="None" Margin="0,0,10,0"></Image>

                        <TextBlock>Add a game</TextBlock>
                    </StackPanel>

                </Button>


                <TextBox            
                    Tag="Enter your search..." 
                    HorizontalAlignment="Left"
                    Grid.Row="0"
                    VerticalAlignment="Top"
                    Margin="40,-40,0,0"
                    TextChanged="TextBox_TextChanged"                  
                    Style="{DynamicResource LibrarySearchBoxStyle}"
                    >
                </TextBox>

                

            </StackPanel>
        </Grid>

        <Grid
            x:Name="settings"
            MaxWidth="5000"
            Height="1007"
            Background="#131313"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch" 
            Margin="230,74,0.4,-0.2"
            Visibility="Visible">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel>
                <Grid>
                    <Menu Width="700" Height="60" Margin="0,200,0,0" FontSize="30" HorizontalAlignment="Center">
                        <MenuItem Width="700" Header="Resolution" Name="mm" Template="{DynamicResource MenuItemControlTemplate1}">
                            <MenuItem Header="1920x1080 (Recommended)" Click="MenuItem_Click" Template="{DynamicResource MenuItemControlTemplate2}"/>
                            <MenuItem Header="1600x900" Click="MenuItem_Click_1" Template="{DynamicResource MenuItemControlTemplate2}"/>
                            <MenuItem Header="1366x768" Click="MenuItem_Click_2" Template="{DynamicResource MenuItemControlTemplate2}"/>
                            <MenuItem Header="1024x768" Click="MenuItem_Click_3" Template="{DynamicResource MenuItemControlTemplate2}"/>
                        </MenuItem>

                    </Menu>
                </Grid>
            </StackPanel>

            <TextBlock Foreground="#FFB3B3B3" FontSize="15" Grid.Row="1" HorizontalAlignment="Center">*Note that, you can only scale the window when it is not in maximized mode!</TextBlock>
        </Grid>

        <Grid
            x:Name="aboutinfo"
            MaxWidth="5000"
            Height="1007"
            Background="#131313"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch" 
            Margin="230,74,0.4,-0.2"
            Visibility="Visible">

            <Viewbox StretchDirection="DownOnly" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Foreground="#FFB3B3B3" TextAlignment="Center" FontSize="30" TextWrapping="Wrap" >

                
                    This one of a kind application is made for the soul purpouse  <LineBreak/>
                     of pleasing the user's request and introducing Desktop <LineBreak/>
                    personalisation to a whole new level <LineBreak/>
                     You can customize your most desired apps, <LineBreak/>
                    no more folders and unorganized home screens. <LineBreak/>
                    <LineBreak/>
                    <LineBreak/>
                    Hope you love our product as much as we do! :)<LineBreak/>
                    <LineBreak/>
                    The team of NeWaveLauncher wishes u the best!
                    
                </TextBlock>
            </Viewbox>
        </Grid>

        <Grid
            x:Name="NavbarPanel"
            HorizontalAlignment="Left"
            Width="230"
            Background="#1f1f1f"
            VerticalAlignment="Stretch">

            <Grid.RowDefinitions>
                <RowDefinition Height="120"/>
                <RowDefinition Height="500"/>
                <RowDefinition />
                <RowDefinition Height="0"/>
            </Grid.RowDefinitions>

            <Rectangle Grid.Row="0" Fill="#131313" />

            <Image
                HorizontalAlignment="Left"
                Height="85"
                Width="133"
                Margin="47,20,0,0"
                VerticalAlignment="Top"
                Source="Assets/NWL Logo.png"
                />

            <StackPanel
                Grid.Row="1">

                <StackPanel.Resources>
                    <Style
                        TargetType="{x:Type ToggleButton}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="#FF909090"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="FontSize" Value="30"/>
                        <Setter Property="Margin" Value="0,20,0,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border
                                        Background="{TemplateBinding Background}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>

                                            <Rectangle
                                                Name="indicator"
                                                HorizontalAlignment="Left"
                                                Width="3">
                                            </Rectangle>

                                            <Image
                                                HorizontalAlignment="Left"
                                                Height="31"
                                                Margin="35,3,0,0"
                                                VerticalAlignment="Top"
                                                Width="31"
                                                Grid.Row="1"
                                                Source="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>


                                            <TextBlock
                                                x:Name="Categories"
                                                HorizontalAlignment="Left"
                                                Margin="15,0,0,0"
                                                Grid.Column="1"
                                                Text="{TemplateBinding Content}"
                                                TextTrimming="WordEllipsis"
                                                Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
                                        </Grid>

                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger
                                            Property="IsChecked" Value="True">
                                            <Setter TargetName="indicator"
                                                    Property="Shape.Fill"
                                                    Value="White"/>

                                            <Setter TargetName="Categories"
                                                    Property="Foreground"
                                                    Value="White"/>
                                        </Trigger>

                                        <Trigger
                                            Property="IsMouseOver"
                                            Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation
                                                            Storyboard.TargetProperty="(ToggleButton.Foreground).Color"
                                                            From="#FF909090"
                                                            To="White">
                                                        </ColorAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="5">
                                                        <ColorAnimation
                                                            Storyboard.TargetProperty="(ToggleButton.Foreground).Color"
                                                            From="White"
                                                            To="#FF909090">
                                                        </ColorAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>

                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <ToggleButton
                    x:Name="LibraryToggle"
                    Content="Library"
                    Checked="LibraryToggle_Checked"
                    Unchecked="LibraryToggle_Unchecked"
                    Tag="/Assets/Bookshelf.png"
                    Margin="0,100,0.4,0">
                </ToggleButton>

                <ToggleButton
                    x:Name="SettingsToggle"
                    Content="Settings" Margin="0,75,0.4,0"
                    Tag="/Assets/SettingsOutline.png"
                    Checked="SettingsToggle_Checked"
                    Unchecked="SettingsToggle_Unchecked"/>

                <ToggleButton
                    x:Name="AboutInfoToggle"
                    Content="About Info" Margin="0,70,0.4,0"
                    Checked="AboutInfoToggle_Checked"
                    Unchecked="AboutInfoToggle_Unchecked"
                    Tag="/Assets/AboutInfoLogo.png"/>
            </StackPanel>

            <StackPanel
                Grid.Row="2"
                VerticalAlignment="Bottom"
                Margin="0,0,0,5">

                <TextBlock
                        Text="Our socials"
                        Foreground="#a3a3a3"
                        FontSize="23"     
                        HorizontalAlignment="Center"
                        Background="Transparent"
                        Margin="0,0,0,8">

                    <TextBlock.TextDecorations>
                        <TextDecoration PenOffset="4" PenOffsetUnit="Pixel"/>
                    </TextBlock.TextDecorations>
                </TextBlock>

                <Grid Height="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                    </Grid.ColumnDefinitions>

                    <Button
                        BorderThickness="0"
                        x:Name="InstaLogo"
                        Width="50" Height="50"
                        Grid.Column="0"
                        Cursor="Hand">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF141414"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Viewbox>
                            <Image Source="Assets/InstagramLogo.png" Height="38" Width="28"/>
                        </Viewbox>
                    </Button>

                    <Button
                        BorderThickness="0"
                        x:Name="TwitterLogo"
                        Width="50" Height="50"
                        Grid.Column="1"
                        Cursor="Hand">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF141414"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Viewbox>
                            <Image Source="Assets/TwitterLogo.png" Height="38" Width="28"/>
                        </Viewbox>
                    </Button>

                    <Button
                        BorderThickness="0"  
                        x:Name="FacebookLogo"
                        Width="50" Height="50"
                        Grid.Column="2"
                        Cursor="Hand">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF141414"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Viewbox>
                            <Image Source="Assets/FacebookLogo.png" Height="38" Width="28"/>
                        </Viewbox>
                    </Button>

                    <Button
                        BorderThickness="0"
                        x:Name="RedditLogo"
                        Width="50" Height="50"
                        Grid.Column="3"
                        Cursor="Hand">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF141414"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Viewbox>
                            <Image Source="Assets/RedditLogo.png" Height="38" Width="28"/>
                        </Viewbox>
                    </Button>
                </Grid>
            </StackPanel>
        </Grid>

    </Grid>
</Window>

